source [find target/swj-dp.tcl]
source [find mem_helper.tcl]
adapter_khz 1000

global _CHIPNAME
if { [info exists CHIPNAME] } {
	set _CHIPNAME $CHIPNAME
} else {
	set _CHIPNAME player28
}

global _WA_SIZE_CM33
if { [info exists WA_SIZE_CM33] } {
	set _WA_SIZE_CM33 $WA_SIZE_CM33
} else {
	set _WA_SIZE_CM33 0x8000
}

global _WA_ADDR_CM33
if { [info exists WA_ADDR_CM33] } {
	set _WA_ADDR_CM33 $WA_ADDR_CM33
} else {
	set _WA_ADDR_CM33 0x30000000
}

global TARGET
set TARGET $_CHIPNAME
swj_newdap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf
dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu

proc init_reset { mode } {
	global RESET_MODE
	set RESET_MODE $mode

	if {[using_jtag]} {
		jtag arp_init-reset
	}
}

proc player28_deassert_reset { t } {
	global RESET_MODE

	if { $RESET_MODE ne "run" } {
		$t arp_examine
		$t arp_poll
		$t arp_poll
		$t arp_halt
		$t arp_waitstate halted 1000
	}
}

target create ${TARGET}.cm33 cortex_m -dap $_CHIPNAME.dap -ap-num 1 -coreid 0
${TARGET}.cm33 configure -work-area-phys $_WA_ADDR_CM33 -work-area-size $_WA_SIZE_CM33
${TARGET}.cm33 configure -event reset-deassert-post "player28_deassert_reset ${TARGET}.cm33"
${TARGET}.cm33 cortex_m reset_config sysresetreq

if {[using_jtag]} {
	if { [info exists TRAVEOII_PSVP] } {
		swj_newdap $_CHIPNAME bs -irlen 18 -expected-id 0x00000000
	} else {
		swj_newdap $_CHIPNAME bs -irlen 4
	}
}
